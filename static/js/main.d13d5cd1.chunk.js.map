{"version":3,"sources":["redux/reducer.js","components/BookItem.js","components/DisplayBooks.js","components/Books.js","App.js","redux/store.js","index.js"],"names":["addBookReducer","createSlice","name","initialState","reducers","addBooks","state","action","push","payload","removeBooks","filter","item","id","updateBooks","map","book","completeBooks","completed","actions","reducer","BookItem","props","updateBook","removeBook","completeBook","inputRef","useRef","motion","li","initial","x","transition","type","duration","animate","whileHover","scale","exit","backgroundColor","className","ref","disabled","defaultValue","onKeyPress","e","value","which","current","update","button","whileTap","onClick","focus","style","color","connect","books","dispatch","addBook","obj","useState","sort","setSort","href","AnimatePresence","length","setBook","onChange","target","handleChange","placeholder","alert","Math","floor","random","App","h1","Y","y","div","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d13d5cd1.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst addBookReducer = createSlice({\r\n  name: \"books\",\r\n  initialState,\r\n  reducers: {\r\n    addBooks: (state, action) => {\r\n      state.push(action.payload);\r\n      return state;\r\n    },\r\n\r\n    removeBooks: (state, action) => {\r\n      return state.filter((item) => item.id !== action.payload);\r\n    },\r\n    updateBooks: (state, action) => {\r\n      return state.map((book) => {\r\n        if (book.id === action.payload.id) {\r\n          return {\r\n            ...book,\r\n            item: action.payload.item,\r\n          };\r\n        }\r\n        return book;\r\n      });\r\n    },\r\n    completeBooks: (state, action) => {\r\n      return state.map((book) => {\r\n        if (book.id === action.payload) {\r\n          return {\r\n            ...book,\r\n            completed: true,\r\n          };\r\n        }\r\n        return book;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addBooks, removeBooks, updateBooks, completeBooks } =\r\n  addBookReducer.actions;\r\nexport const reducer = addBookReducer.reducer;\r\n","import { motion } from \"framer-motion\";\r\nimport React, { useRef } from \"react\";\r\nimport { AiOutlineEdit, AiOutlineDelete } from \"react-icons/ai\";\r\nimport { IoCheckmarkDoneSharp } from \"react-icons/io5\";\r\n\r\nconst BookItem = (props) => {\r\n  const { item, updateBook, removeBook, completeBook } = props;\r\n\r\n  const inputRef = useRef(true);\r\n\r\n  const changeFocus = () => {\r\n    inputRef.current.disabled = false;\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const update = (id, value, e) => {\r\n    if (e.which === 13) {\r\n      updateBook({ id, item: value });\r\n      inputRef.current.disabled = true;\r\n    }\r\n  };\r\n  return (\r\n    <motion.li\r\n      initial={{ x: \"150vw\", transition: { type: \"spring\", duration: 2 } }}\r\n      animate={{ x: 0, transition: { type: \"spring\", duration: 2 } }}\r\n      whileHover={{\r\n        scale: 0.9,\r\n        transition: { type: \"spring\", duration: 0.1 },\r\n      }}\r\n      exit={{\r\n        x: \"-60vw\",\r\n        scale: [1, 0],\r\n        transition: { duration: 0.5 },\r\n        backgroundColor: \"rgba(255,0,0,1)\",\r\n      }}\r\n      key={item.id}\r\n      className=\"card\"\r\n    >\r\n      <textarea\r\n        ref={inputRef}\r\n        disabled={inputRef}\r\n        defaultValue={item.item}\r\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\r\n      />\r\n      <div className=\"btns\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.4 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => changeFocus()}\r\n        >\r\n          {\"\"}\r\n          <AiOutlineEdit />\r\n          {\"\"}\r\n        </motion.button>\r\n        {item.completed === false && (\r\n          <motion.button\r\n            whileHover={{ scale: 1.4 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            style={{ color: \"blue\" }}\r\n            onClick={() => completeBook(item.id)}\r\n          >\r\n            <IoCheckmarkDoneSharp />\r\n            {\"\"}\r\n          </motion.button>\r\n        )}\r\n        <motion.button\r\n          whileHover={{ scale: 1.4 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          style={{ color: \"#8b0000\" }}\r\n          onClick={() => removeBook(item.id)}\r\n        >\r\n          {\"\"}\r\n          <AiOutlineDelete />\r\n        </motion.button>\r\n        {\"\"}\r\n      </div>\r\n      {item.completed && <span className=\"completed\">done!</span>}\r\n    </motion.li>\r\n  );\r\n};\r\n\r\nexport default BookItem;\r\n","import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addBooks,\r\n  removeBooks,\r\n  updateBooks,\r\n  completeBooks,\r\n} from \"../redux/reducer\";\r\nimport BookItem from \"./BookItem\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    books: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addBook: (obj) => dispatch(addBooks(obj)),\r\n    removeBook: (id) => dispatch(removeBooks(id)),\r\n    updateBook: (obj) => dispatch(updateBooks(obj)),\r\n    completeBook: (id) => dispatch(completeBooks(id)),\r\n  };\r\n};\r\n\r\nconst DisplayBooks = (props) => {\r\n  const [sort, setSort] = useState(\"active\");\r\n  return (\r\n    <div className=\"displaybooks\">\r\n      <div className=\"buttons\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"active\")}\r\n        >\r\n          Actively Reading\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"completed\")}\r\n        >\r\n          Completed Books\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"all\")}\r\n        >\r\n          All\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"all\")}\r\n        >\r\n          <a href=\"https:gghosts.github.io\">Search Books</a>\r\n        </motion.button>\r\n      </div>\r\n      <ul>\r\n        <AnimatePresence>\r\n          {props.books.length > 0 && sort === \"active\"\r\n            ? props.books.map((item) => {\r\n                return (\r\n                  item.completed == false && (\r\n                    <BookItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      removeBook={props.removeBook}\r\n                      updateBook={props.updateBook}\r\n                      completeBook={props.completeBook}\r\n                    />\r\n                  )\r\n                );\r\n              })\r\n            : null}\r\n          {props.books.length > 0 && sort === \"completed\"\r\n            ? props.books.map((item) => {\r\n                return (\r\n                  item.completed == true && (\r\n                    <BookItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      removeBook={props.removeBook}\r\n                      updateBook={props.updateBook}\r\n                      completeBook={props.completeBook}\r\n                    />\r\n                  )\r\n                );\r\n              })\r\n            : null}\r\n          {props.books.length > 0 && sort === \"all\"\r\n            ? props.books.map((item) => {\r\n                return (\r\n                  <BookItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    removeBook={props.removeBook}\r\n                    updateBook={props.updateBook}\r\n                    completeBook={props.completeBook}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n        </AnimatePresence>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayBooks);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBooks } from \"../redux/reducer\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    books: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addBook: (obj) => dispatch(addBooks(obj)),\r\n  };\r\n};\r\n\r\nconst Books = (props) => {\r\n  const [book, setBook] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setBook(e.target.value);\r\n  };\r\n\r\n  const add = () => {\r\n    if (book === \"\") {\r\n      alert(\"Novel List is empty. What do you want to read?\");\r\n    } else {\r\n      props.addBook({\r\n        id: Math.floor(Math.random() * 1000),\r\n        item: book,\r\n        completed: false,\r\n      });\r\n      setBook(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addBooks\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        className=\"book-input\"\r\n        value={book}\r\n        placeholder=\"What do you want to read?\"\r\n      />\r\n\r\n      <motion.button\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n        className=\"add-btn\"\r\n        onClick={() => add()}\r\n      >\r\n        <GoPlus />\r\n      </motion.button>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\r\n","import \"./css/main.css\";\r\nimport DisplayBooks from \"./components/DisplayBooks\";\r\nimport Books from \"./components/Books\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <motion.h1\r\n        initial={{ Y: -200 }}\r\n        animate={{ y: 0 }}\r\n        transition={{ type: \"spring\", duration: 0.5 }}\r\n        whileHover={{ scale: 1.1 }}\r\n      >\r\n        novel list\r\n      </motion.h1>\r\n      <motion.div\r\n        initial={{ Y: 1000 }}\r\n        animate={{ y: 0 }}\r\n        transition={{ type: \"spring\", duration: 1 }}\r\n      >\r\n          <Books />\r\n          <DisplayBooks />\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n});\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\n//import reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}